"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _tags = require("@linaria/tags");

class CssProcessor extends _tags.TaggedTemplateProcessor {
  // eslint-disable-next-line class-methods-use-this
  addInterpolation(node, source) {
    throw new Error(`css tag cannot handle '${source}' as an interpolated value`);
  }

  doEvaltimeReplacement() {
    this.replacer(this.value, false);
  }

  doRuntimeReplacement() {
    this.replacer(this.astService.stringLiteral(this.className), false);
  }

  extractRules(valueCache, cssText, loc) {
    var _loc$start;

    const rules = {};
    const selector = `.${this.className}`;
    rules[selector] = {
      cssText,
      className: this.className,
      displayName: this.displayName,
      start: (_loc$start = loc === null || loc === void 0 ? void 0 : loc.start) !== null && _loc$start !== void 0 ? _loc$start : null
    };
    return rules;
  }

  get asSelector() {
    return this.className;
  }

  get value() {
    return this.astService.stringLiteral(this.className);
  }

}

exports.default = CssProcessor;
//# sourceMappingURL=css.js.map