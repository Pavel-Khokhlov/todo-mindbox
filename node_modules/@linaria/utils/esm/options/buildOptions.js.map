{"version":3,"file":"buildOptions.js","names":["babelMerge","isNotNull","cache","WeakMap","merge","a","b","has","set","cacheForA","get","result","buildOptions","configs","map","i","filter","reduce"],"sources":["../../src/options/buildOptions.ts"],"sourcesContent":["import type { TransformOptions } from '@babel/core';\nimport babelMerge from 'babel-merge';\n\nimport isNotNull from '../isNotNull';\n\nconst cache = new WeakMap<\n  TransformOptions,\n  WeakMap<TransformOptions, TransformOptions>\n>();\n\nconst merge = (a: TransformOptions, b: TransformOptions) => {\n  if (!cache.has(a)) {\n    cache.set(a, new WeakMap());\n  }\n\n  const cacheForA = cache.get(a)!;\n  if (cacheForA.has(b)) {\n    return cacheForA.get(b)!;\n  }\n\n  const result = babelMerge(a, b);\n  cacheForA.set(b, result);\n  return result;\n};\n\n/**\n * Merges babel configs together. If a pair of configs were merged before,\n * it will return the cached result.\n */\nexport default function buildOptions(\n  ...configs: (TransformOptions | null | undefined)[]\n): TransformOptions {\n  // Merge all configs together\n  return configs\n    .map((i) => i ?? null)\n    .filter(isNotNull)\n    .reduce(merge);\n}\n"],"mappings":"AACA,OAAOA,UAAP,MAAuB,aAAvB;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,MAAMC,KAAK,GAAG,IAAIC,OAAJ,EAAd;;AAKA,MAAMC,KAAK,GAAG,CAACC,CAAD,EAAsBC,CAAtB,KAA8C;EAC1D,IAAI,CAACJ,KAAK,CAACK,GAAN,CAAUF,CAAV,CAAL,EAAmB;IACjBH,KAAK,CAACM,GAAN,CAAUH,CAAV,EAAa,IAAIF,OAAJ,EAAb;EACD;;EAED,MAAMM,SAAS,GAAGP,KAAK,CAACQ,GAAN,CAAUL,CAAV,CAAlB;;EACA,IAAII,SAAS,CAACF,GAAV,CAAcD,CAAd,CAAJ,EAAsB;IACpB,OAAOG,SAAS,CAACC,GAAV,CAAcJ,CAAd,CAAP;EACD;;EAED,MAAMK,MAAM,GAAGX,UAAU,CAACK,CAAD,EAAIC,CAAJ,CAAzB;EACAG,SAAS,CAACD,GAAV,CAAcF,CAAd,EAAiBK,MAAjB;EACA,OAAOA,MAAP;AACD,CAbD;AAeA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,YAAT,CACb,GAAGC,OADU,EAEK;EAClB;EACA,OAAOA,OAAO,CACXC,GADI,CACCC,CAAD,IAAOA,CAAC,IAAI,IADZ,EAEJC,MAFI,CAEGf,SAFH,EAGJgB,MAHI,CAGGb,KAHH,CAAP;AAID"}