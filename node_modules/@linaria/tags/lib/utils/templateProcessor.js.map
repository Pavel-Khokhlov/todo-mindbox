{"version":3,"file":"templateProcessor.js","names":["unitRegex","RegExp","units","join","templateProcessor","tagProcessor","template","valueCache","sourceMapReplacements","isReferenced","cssText","item","lastTemplateElementLocation","shift","value","cooked","loc","ex","end","beforeLength","length","next","start","line","column","get","name","throwIfInvalid","isValidValue","bind","source","undefined","hasMeta","__linaria","className","isCSSable","stripLines","toCSS","push","original","matches","match","unit","varId","addInterpolation","substring","e","Error","buildCodeFrameError","message","rules","extractRules","location","includes"],"sources":["../../src/utils/templateProcessor.ts"],"sourcesContent":["/* eslint-disable no-continue */\n/**\n * This file handles transforming template literals to class names or styled components and generates CSS content.\n * It uses CSS code from template literals and evaluated values of lazy dependencies stored in ValueCache.\n */\n\nimport type { TemplateElement, SourceLocation } from '@babel/types';\n\nimport type TaggedTemplateProcessor from '../TaggedTemplateProcessor';\nimport type {\n  ExpressionValue,\n  ValueCache,\n  Rules,\n  Replacements,\n} from '../types';\n\nimport hasMeta from './hasMeta';\nimport stripLines from './stripLines';\nimport throwIfInvalid from './throwIfInvalid';\nimport toCSS, { isCSSable } from './toCSS';\nimport { units } from './units';\n\n// Match any valid CSS units followed by a separator such as ;, newline etc.\nconst unitRegex = new RegExp(`^(?:${units.join('|')})\\\\b`);\n\nexport default function templateProcessor(\n  tagProcessor: TaggedTemplateProcessor,\n  [...template]: (TemplateElement | ExpressionValue)[],\n  valueCache: ValueCache\n): [rules: Rules, sourceMapReplacements: Replacements] | null {\n  const sourceMapReplacements: Replacements = [];\n\n  // Check if the variable is referenced anywhere for basic DCE\n  // Only works when it's assigned to a variable\n  const { isReferenced } = tagProcessor;\n\n  // Serialize the tagged template literal to a string\n  let cssText = '';\n\n  let item: TemplateElement | ExpressionValue | undefined;\n  let lastTemplateElementLocation: SourceLocation | null | undefined;\n  // eslint-disable-next-line no-cond-assign\n  while ((item = template.shift())) {\n    if ('type' in item) {\n      // It's a template element\n      cssText += item.value.cooked;\n      lastTemplateElementLocation = item.loc;\n      continue;\n    }\n\n    // It's an expression\n    const { ex } = item;\n\n    const { end } = ex.loc!;\n    const beforeLength = cssText.length;\n\n    // The location will be end of the current string to start of next string\n    const next = template[0] as TemplateElement; // template[0] is the next template element\n    const loc = {\n      // +1 because an expression location always shows 1 column before\n      start: {\n        line: lastTemplateElementLocation!.end.line,\n        column: lastTemplateElementLocation!.end.column + 1,\n      },\n      end: next\n        ? { line: next.loc!.start.line, column: next.loc!.start.column }\n        : { line: end.line, column: end.column + 1 },\n    };\n\n    const value = valueCache.get(ex.name);\n\n    throwIfInvalid(\n      tagProcessor.isValidValue.bind(tagProcessor),\n      value,\n      item,\n      item.source\n    );\n\n    if (value !== undefined && typeof value !== 'function') {\n      // Skip the blank string instead of throw ing an error\n      if (value === '') {\n        continue;\n      }\n\n      if (hasMeta(value)) {\n        // If it's a React component wrapped in styled, get the class name\n        // Useful for interpolating components\n        cssText += `.${value.__linaria.className}`;\n      } else if (isCSSable(value)) {\n        // If it's a plain object or an array, convert it to a CSS string\n        cssText += stripLines(loc, toCSS(value));\n      } else {\n        // For anything else, assume it'll be stringified\n        cssText += stripLines(loc, value);\n      }\n\n      sourceMapReplacements.push({\n        original: loc,\n        length: cssText.length - beforeLength,\n      });\n    }\n\n    // Is it props based interpolation?\n    if (typeof value === 'function') {\n      // Check if previous expression was a CSS variable that we replaced\n      // If it has a unit after it, we need to move the unit into the interpolation\n      // e.g. `var(--size)px` should actually be `var(--size)`\n      // So we check if the current text starts with a unit, and add the unit to the previous interpolation\n      // Another approach would be `calc(var(--size) * 1px), but some browsers don't support all units\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=956573\n      const matches = next.value.cooked?.match(unitRegex);\n\n      try {\n        if (matches) {\n          template.shift();\n          const [unit] = matches;\n\n          const varId = tagProcessor.addInterpolation(\n            item.ex,\n            item.source,\n            unit\n          );\n          cssText += `var(--${varId})`;\n\n          cssText += next.value.cooked?.substring(unit?.length ?? 0) ?? '';\n        } else {\n          const varId = tagProcessor.addInterpolation(item.ex, item.source);\n          cssText += `var(--${varId})`;\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          throw item.buildCodeFrameError(e.message);\n        }\n\n        throw e;\n      }\n    }\n  }\n\n  const rules = tagProcessor.extractRules(\n    valueCache,\n    cssText,\n    tagProcessor.location\n  );\n\n  // tagProcessor.doRuntimeReplacement(classes);\n  if (!isReferenced && !cssText.includes(':global')) {\n    return null;\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  return [rules, sourceMapReplacements];\n}\n"],"mappings":"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"}