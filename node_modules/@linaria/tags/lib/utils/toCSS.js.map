{"version":3,"file":"toCSS.js","names":["isCSSPropertyValue","o","isBoxedPrimitive","Number","isFinite","isCSSable","Array","isArray","every","Object","values","hyphenate","s","startsWith","replace","match","p1","toLowerCase","toCSS","map","join","valueOf","toString","entries","filter","value","key","p2","p3","unitless"],"sources":["../../src/utils/toCSS.ts"],"sourcesContent":["import type { CSSPropertyValue, CSSable } from '../types';\n\nimport isBoxedPrimitive from './isBoxedPrimitive';\nimport { unitless } from './units';\n\nconst isCSSPropertyValue = (o: unknown): o is CSSPropertyValue => {\n  return (\n    isBoxedPrimitive(o) ||\n    typeof o === 'string' ||\n    (typeof o === 'number' && Number.isFinite(o))\n  );\n};\n\nexport const isCSSable = (o: unknown): o is CSSable => {\n  if (isCSSPropertyValue(o)) {\n    return true;\n  }\n\n  if (Array.isArray(o)) {\n    return o.every(isCSSable);\n  }\n\n  if (typeof o === 'object') {\n    return o !== null && Object.values(o).every(isCSSable);\n  }\n\n  return false;\n};\n\nconst hyphenate = (s: string) => {\n  if (s.startsWith('--')) {\n    // It's a custom property which is already well formatted.\n    return s;\n  }\n  return (\n    s\n      // Hyphenate CSS property names from camelCase version from JS string\n      .replace(/([A-Z])/g, (match, p1) => `-${p1.toLowerCase()}`)\n      // Special case for `-ms` because in JS it starts with `ms` unlike `Webkit`\n      .replace(/^ms-/, '-ms-')\n  );\n};\n\n// Some tools such as polished.js output JS objects\n// To support them transparently, we convert JS objects to CSS strings\nexport default function toCSS(o: CSSable): string {\n  if (Array.isArray(o)) {\n    return o.map(toCSS).join('\\n');\n  }\n\n  if (isCSSPropertyValue(o)) {\n    return o.valueOf().toString();\n  }\n\n  return Object.entries(o)\n    .filter(\n      ([, value]) =>\n        // Ignore all falsy values except numbers\n        typeof value === 'number' || value\n    )\n    .map(([key, value]) => {\n      if (!isCSSPropertyValue(value)) {\n        return `${key} { ${toCSS(value)} }`;\n      }\n\n      return `${hyphenate(key)}: ${\n        typeof value === 'number' &&\n        value !== 0 &&\n        // Strip vendor prefixes when checking if the value is unitless\n        !(\n          key.replace(\n            /^(Webkit|Moz|O|ms)([A-Z])(.+)$/,\n            (match, p1, p2, p3) => `${p2.toLowerCase()}${p3}`\n          ) in unitless\n        )\n          ? `${value}px`\n          : value\n      };`;\n    })\n    .join(' ');\n}\n"],"mappings":";;;;;;;;AAEA;;AACA;;;;AAEA,MAAMA,kBAAkB,GAAIC,CAAD,IAAuC;EAChE,OACE,IAAAC,yBAAA,EAAiBD,CAAjB,KACA,OAAOA,CAAP,KAAa,QADb,IAEC,OAAOA,CAAP,KAAa,QAAb,IAAyBE,MAAM,CAACC,QAAP,CAAgBH,CAAhB,CAH5B;AAKD,CAND;;AAQO,MAAMI,SAAS,GAAIJ,CAAD,IAA8B;EACrD,IAAID,kBAAkB,CAACC,CAAD,CAAtB,EAA2B;IACzB,OAAO,IAAP;EACD;;EAED,IAAIK,KAAK,CAACC,OAAN,CAAcN,CAAd,CAAJ,EAAsB;IACpB,OAAOA,CAAC,CAACO,KAAF,CAAQH,SAAR,CAAP;EACD;;EAED,IAAI,OAAOJ,CAAP,KAAa,QAAjB,EAA2B;IACzB,OAAOA,CAAC,KAAK,IAAN,IAAcQ,MAAM,CAACC,MAAP,CAAcT,CAAd,EAAiBO,KAAjB,CAAuBH,SAAvB,CAArB;EACD;;EAED,OAAO,KAAP;AACD,CAdM;;;;AAgBP,MAAMM,SAAS,GAAIC,CAAD,IAAe;EAC/B,IAAIA,CAAC,CAACC,UAAF,CAAa,IAAb,CAAJ,EAAwB;IACtB;IACA,OAAOD,CAAP;EACD;;EACD,OACEA,CAAC,CACC;EADD,CAEEE,OAFH,CAEW,UAFX,EAEuB,CAACC,KAAD,EAAQC,EAAR,KAAgB,IAAGA,EAAE,CAACC,WAAH,EAAiB,EAF3D,EAGE;EAHF,CAIGH,OAJH,CAIW,MAJX,EAImB,MAJnB,CADF;AAOD,CAZD,C,CAcA;AACA;;;AACe,SAASI,KAAT,CAAejB,CAAf,EAAmC;EAChD,IAAIK,KAAK,CAACC,OAAN,CAAcN,CAAd,CAAJ,EAAsB;IACpB,OAAOA,CAAC,CAACkB,GAAF,CAAMD,KAAN,EAAaE,IAAb,CAAkB,IAAlB,CAAP;EACD;;EAED,IAAIpB,kBAAkB,CAACC,CAAD,CAAtB,EAA2B;IACzB,OAAOA,CAAC,CAACoB,OAAF,GAAYC,QAAZ,EAAP;EACD;;EAED,OAAOb,MAAM,CAACc,OAAP,CAAetB,CAAf,EACJuB,MADI,CAEH,CAAC,GAAGC,KAAH,CAAD,KACE;EACA,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAJ5B,EAMJN,GANI,CAMA,CAAC,CAACO,GAAD,EAAMD,KAAN,CAAD,KAAkB;IACrB,IAAI,CAACzB,kBAAkB,CAACyB,KAAD,CAAvB,EAAgC;MAC9B,OAAQ,GAAEC,GAAI,MAAKR,KAAK,CAACO,KAAD,CAAQ,IAAhC;IACD;;IAED,OAAQ,GAAEd,SAAS,CAACe,GAAD,CAAM,KACvB,OAAOD,KAAP,KAAiB,QAAjB,IACAA,KAAK,KAAK,CADV,IAEA;IACA,EACEC,GAAG,CAACZ,OAAJ,CACE,gCADF,EAEE,CAACC,KAAD,EAAQC,EAAR,EAAYW,EAAZ,EAAgBC,EAAhB,KAAwB,GAAED,EAAE,CAACV,WAAH,EAAiB,GAAEW,EAAG,EAFlD,KAGKC,eAJP,CAHA,GASK,GAAEJ,KAAM,IATb,GAUIA,KACL,GAZD;EAaD,CAxBI,EAyBJL,IAzBI,CAyBC,GAzBD,CAAP;AA0BD"}