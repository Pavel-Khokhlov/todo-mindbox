{"version":3,"file":"BaseProcessor.js","names":["generator","getClassNameAndSlug","hasMeta","isCSSable","validateParams","BaseProcessor","artifacts","dependencies","interpolations","constructor","params","astService","location","replacer","displayName","isReferenced","idx","options","context","className","slug","tag","isValidValue","value","tagSourceCode","type","name","code","toString"],"sources":["../src/BaseProcessor.ts"],"sourcesContent":["/* eslint-disable class-methods-use-this */\nimport type { types as t } from '@babel/core';\nimport generator from '@babel/generator';\nimport type {\n  Expression,\n  Identifier,\n  SourceLocation,\n  MemberExpression,\n} from '@babel/types';\n\nimport type {\n  ExpressionValue,\n  IInterpolation,\n  Params,\n  Value,\n  ValueCache,\n  Artifact,\n} from './types';\nimport getClassNameAndSlug from './utils/getClassNameAndSlug';\nimport hasMeta from './utils/hasMeta';\nimport { isCSSable } from './utils/toCSS';\nimport type { IFileContext, IOptions } from './utils/types';\nimport { validateParams } from './utils/validateParams';\n\nexport { Expression };\n\nexport type ProcessorParams = ConstructorParameters<typeof BaseProcessor>;\nexport type TailProcessorParams = ProcessorParams extends [Params, ...infer T]\n  ? T\n  : never;\n\nexport default abstract class BaseProcessor {\n  public readonly artifacts: Artifact[] = [];\n\n  public readonly className: string;\n\n  public readonly dependencies: ExpressionValue[] = [];\n\n  public interpolations: IInterpolation[] = [];\n\n  public readonly slug: string;\n\n  protected tag: Identifier | MemberExpression;\n\n  protected evaluated:\n    | Record<'dependencies' | 'expression', Value[]>\n    | undefined;\n\n  public constructor(\n    params: Params,\n    protected readonly astService: typeof t & {\n      addNamedImport: (name: string, source: string) => Identifier;\n    },\n    public readonly location: SourceLocation | null,\n    protected readonly replacer: (\n      replacement: Expression,\n      isPure: boolean\n    ) => void,\n    public readonly displayName: string,\n    public readonly isReferenced: boolean,\n    protected readonly idx: number,\n    protected readonly options: IOptions,\n    protected readonly context: IFileContext\n  ) {\n    validateParams(\n      params,\n      ['tag'],\n      'Unknown error: a tag param is not specified'\n    );\n\n    const { className, slug } = getClassNameAndSlug(\n      this.displayName,\n      this.idx,\n      this.options,\n      this.context\n    );\n\n    this.className = className;\n    this.slug = slug;\n\n    [[, this.tag]] = params;\n  }\n\n  public abstract build(values: ValueCache): void;\n\n  public isValidValue(value: unknown): value is Value {\n    return typeof value === 'function' || isCSSable(value) || hasMeta(value);\n  }\n\n  /**\n   * Perform a replacement for the tag in evaluation time.\n   * For example, `css` tag will be replaced with its className,\n   * whereas `styled` tag will be replaced with an object with metadata.\n   */\n  public abstract doEvaltimeReplacement(): void;\n\n  /**\n   * Perform a replacement for the tag with its runtime version.\n   * For example, `css` tag will be replaced with its className,\n   * whereas `styled` tag will be replaced with a component.\n   * If some parts require evaluated data for render,\n   * they will be replaced with placeholders.\n   */\n  public abstract doRuntimeReplacement(): void;\n\n  /**\n   * A replacement for tag referenced in a template literal.\n   */\n  public abstract get asSelector(): string;\n\n  /**\n   * A replacement for the tag in evaluation time.\n   * For example, `css` tag will be replaced with its className,\n   * whereas `styled` tag will be replaced with an object with metadata.\n   */\n  public abstract get value(): Expression;\n\n  protected tagSourceCode(): string {\n    if (this.tag.type === 'Identifier') {\n      return this.tag.name;\n    }\n\n    return generator(this.tag).code;\n  }\n\n  public toString(): string {\n    return this.tagSourceCode();\n  }\n}\n"],"mappings":"AAAA;AAEA,OAAOA,SAAP,MAAsB,kBAAtB;AAgBA,OAAOC,mBAAP,MAAgC,6BAAhC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,SAAT,QAA0B,eAA1B;AAEA,SAASC,cAAT,QAA+B,wBAA/B;AASA,eAAe,MAAeC,aAAf,CAA6B;EAC1BC,SAAS,GAAe,EAAf;EAITC,YAAY,GAAsB,EAAtB;EAErBC,cAAc,GAAqB,EAArB;;EAUdC,WAAW,CAChBC,MADgB,EAEGC,UAFH,EAKAC,QALA,EAMGC,QANH,EAUAC,WAVA,EAWAC,YAXA,EAYGC,GAZH,EAaGC,OAbH,EAcGC,OAdH,EAehB;IAAA,KAbmBP,UAanB,GAbmBA,UAanB;IAAA,KAVgBC,QAUhB,GAVgBA,QAUhB;IAAA,KATmBC,QASnB,GATmBA,QASnB;IAAA,KALgBC,WAKhB,GALgBA,WAKhB;IAAA,KAJgBC,YAIhB,GAJgBA,YAIhB;IAAA,KAHmBC,GAGnB,GAHmBA,GAGnB;IAAA,KAFmBC,OAEnB,GAFmBA,OAEnB;IAAA,KADmBC,OACnB,GADmBA,OACnB;IACAd,cAAc,CACZM,MADY,EAEZ,CAAC,KAAD,CAFY,EAGZ,6CAHY,CAAd;IAMA,MAAM;MAAES,SAAF;MAAaC;IAAb,IAAsBnB,mBAAmB,CAC7C,KAAKa,WADwC,EAE7C,KAAKE,GAFwC,EAG7C,KAAKC,OAHwC,EAI7C,KAAKC,OAJwC,CAA/C;IAOA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,IAAL,GAAYA,IAAZ;IAEA,CAAC,GAAG,KAAKC,GAAR,CAAD,IAAiBX,MAAjB;EACD;;EAIMY,YAAY,CAACC,KAAD,EAAiC;IAClD,OAAO,OAAOA,KAAP,KAAiB,UAAjB,IAA+BpB,SAAS,CAACoB,KAAD,CAAxC,IAAmDrB,OAAO,CAACqB,KAAD,CAAjE;EACD;EAED;AACF;AACA;AACA;AACA;;;EAwBYC,aAAa,GAAW;IAChC,IAAI,KAAKH,GAAL,CAASI,IAAT,KAAkB,YAAtB,EAAoC;MAClC,OAAO,KAAKJ,GAAL,CAASK,IAAhB;IACD;;IAED,OAAO1B,SAAS,CAAC,KAAKqB,GAAN,CAAT,CAAoBM,IAA3B;EACD;;EAEMC,QAAQ,GAAW;IACxB,OAAO,KAAKJ,aAAL,EAAP;EACD;;AAhGyC"}