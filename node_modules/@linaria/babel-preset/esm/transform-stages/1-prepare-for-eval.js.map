{"version":3,"file":"1-prepare-for-eval.js","names":["readFileSync","dirname","extname","babel","createCustomDebug","buildOptions","getFileIdx","loadBabelOptions","withLinariaMetadata","cachedParseSync","loadLinariaOptions","isModuleResolver","i","key","runPreevalStage","filename","code","options","perFileBabelConfig","pluginOptions","parseConfig","babelOptions","fullParserOptions","file","transformPlugins","require","resolve","moduleResolverPlugin","plugins","find","unshift","transformConfig","envName","sourceMaps","sourceFileName","inputSourceMap","root","ast","babelrc","configFile","result","transformFromAstSync","program","Error","getMatchedRule","rules","length","rule","test","RegExp","action","prepareCode","originalCode","only","fileCache","log","set","preevalStageResult","metadata","evaluator","paths","default","name","processQueueItem","item","codeCache","undefined","results","Set","has","Map","extension","extensions","includes","join","uncachedExports","get","forEach","token","delete","add","size","imports","Array","from","remainExports","preparedCode","prepareForEvalSync","resolveCache","resolvedFile","stack","processed","queue","importsOnly","importedFile","resolved","fileContent","push","err","prepareForEval","promises","promise","then","resolveCacheKey","cached","importsOnlySet","cachedOnly","split","Promise","all"],"sources":["../../src/transform-stages/1-prepare-for-eval.ts"],"sourcesContent":["import { readFileSync } from 'fs';\nimport { dirname, extname } from 'path';\n\nimport * as babel from '@babel/core';\n\nimport { createCustomDebug } from '@linaria/logger';\nimport type { EvalRule, Evaluator } from '@linaria/utils';\nimport { buildOptions, getFileIdx, loadBabelOptions } from '@linaria/utils';\n\nimport type Module from '../module';\nimport type { CodeCache, ITransformFileResult, Options } from '../types';\nimport withLinariaMetadata from '../utils/withLinariaMetadata';\n\nimport cachedParseSync from './helpers/cachedParseSync';\nimport loadLinariaOptions from './helpers/loadLinariaOptions';\n\nexport type FileInQueue = {\n  name: string;\n  code: string;\n  only: string[];\n} | null;\n\nconst isModuleResolver = (i: unknown): i is { options: unknown } =>\n  typeof i === 'object' &&\n  i !== null &&\n  (i as { key?: string }).key === 'module-resolver';\n\nfunction runPreevalStage(\n  filename: string,\n  code: string,\n  options: Pick<Options, 'root' | 'pluginOptions' | 'inputSourceMap'>,\n  perFileBabelConfig?: babel.TransformOptions\n): babel.BabelFileResult {\n  const pluginOptions = loadLinariaOptions(options.pluginOptions);\n  const parseConfig = buildOptions(\n    pluginOptions?.babelOptions,\n    perFileBabelConfig\n  );\n\n  const fullParserOptions = loadBabelOptions(filename, parseConfig);\n  const file = cachedParseSync(code, fullParserOptions);\n\n  const transformPlugins: babel.PluginItem[] = [\n    [require.resolve('../plugins/preeval'), pluginOptions],\n  ];\n\n  const moduleResolverPlugin =\n    fullParserOptions.plugins?.find(isModuleResolver);\n  if (moduleResolverPlugin) {\n    transformPlugins.unshift(moduleResolverPlugin);\n  }\n\n  const transformConfig = buildOptions({\n    envName: 'linaria',\n    plugins: transformPlugins,\n    sourceMaps: true,\n    sourceFileName: filename,\n    inputSourceMap: options.inputSourceMap,\n    root: options.root,\n    ast: true,\n    babelrc: false,\n    configFile: false,\n  });\n\n  const result = babel.transformFromAstSync(file, code, {\n    ...transformConfig,\n    filename,\n  });\n\n  if (!result || !result.ast?.program) {\n    throw new Error('Babel transform failed');\n  }\n\n  return result;\n}\n\nfunction getMatchedRule(\n  rules: EvalRule[],\n  filename: string,\n  code: string\n): EvalRule {\n  for (let i = rules.length - 1; i >= 0; i--) {\n    const rule = rules[i];\n    if (!rule.test) {\n      return rule;\n    }\n\n    if (typeof rule.test === 'function' && rule.test(filename, code)) {\n      return rule;\n    }\n\n    if (rule.test instanceof RegExp && rule.test.test(filename)) {\n      return rule;\n    }\n  }\n\n  return { action: 'ignore' };\n}\n\nfunction prepareCode(\n  filename: string,\n  originalCode: string,\n  only: string[],\n  options: Pick<Options, 'root' | 'pluginOptions' | 'inputSourceMap'>,\n  fileCache: Map<string | symbol, ITransformFileResult>\n): [\n  code: string,\n  imports: Module['imports'],\n  metadata?: babel.BabelFileMetadata\n] {\n  const log = createCustomDebug('transform', getFileIdx(filename));\n\n  const pluginOptions = loadLinariaOptions(options.pluginOptions);\n\n  const { action, babelOptions } = getMatchedRule(\n    pluginOptions.rules,\n    filename,\n    originalCode\n  );\n\n  if (action === 'ignore') {\n    log('stage-1:ignore', '');\n    fileCache.set('*', {\n      code: originalCode,\n    });\n\n    return [originalCode, null];\n  }\n\n  const preevalStageResult = runPreevalStage(\n    filename,\n    originalCode,\n    options,\n    babelOptions\n  );\n\n  if (\n    only.length === 1 &&\n    only[0] === '__linariaPreval' &&\n    !withLinariaMetadata(preevalStageResult.metadata)\n  ) {\n    log('stage-1:evaluator:end', 'no metadata');\n    return [preevalStageResult.code!, null, preevalStageResult.metadata];\n  }\n\n  log('stage-1:preeval', 'metadata %O', preevalStageResult.metadata);\n\n  // Action can be a function or a module name\n  const evaluator: Evaluator =\n    typeof action === 'function'\n      ? action\n      : require(require.resolve(action, {\n          paths: [dirname(filename)],\n        })).default;\n\n  log('stage-1:evaluator:start', 'using %s', evaluator.name);\n\n  const result = evaluator(\n    filename,\n    pluginOptions,\n    preevalStageResult.code!,\n    only\n  );\n\n  log('stage-1:evaluator:end', '');\n\n  return [...result, preevalStageResult.metadata];\n}\n\nfunction processQueueItem(\n  item: {\n    name: string;\n    code: string;\n    only: string[];\n  } | null,\n  codeCache: CodeCache,\n  options: Pick<Options, 'root' | 'pluginOptions' | 'inputSourceMap'>\n):\n  | {\n      imports: Map<string, string[]> | null;\n      name: string;\n      results: ITransformFileResult[];\n    }\n  | undefined {\n  if (!item) {\n    return undefined;\n  }\n\n  const pluginOptions = loadLinariaOptions(options.pluginOptions);\n\n  const results = new Set<ITransformFileResult>();\n\n  const { name, only, code } = item;\n  if (!codeCache.has(name)) {\n    codeCache.set(name, new Map());\n  }\n\n  const log = createCustomDebug('transform', getFileIdx(name));\n\n  const extension = extname(name);\n  if (!pluginOptions.extensions.includes(extension)) {\n    log(\n      'init',\n      `${name} is ignored. If you want it to be processed, you should add '${extension}' to the \"extensions\" option.`\n    );\n    return undefined;\n  }\n\n  log('init', `${name} (${only.join(', ')})\\n${code}`);\n\n  const uncachedExports = new Set(only);\n  const fileCache = codeCache.get(name)!;\n  uncachedExports.forEach((token) => {\n    if (fileCache.has(token)) {\n      uncachedExports.delete(token);\n      results.add(fileCache.get(token)!);\n    }\n  });\n\n  if (uncachedExports.size === 0) {\n    // Already processed\n    return {\n      imports: null,\n      name,\n      results: Array.from(results),\n    };\n  }\n\n  const remainExports = Array.from(uncachedExports);\n\n  log('stage-1', `>> (${remainExports.join(', ')})`);\n\n  const [preparedCode, imports, metadata] = prepareCode(\n    name,\n    code,\n    remainExports,\n    options,\n    fileCache\n  );\n\n  if (code === preparedCode) {\n    log('stage-1', `<< (${remainExports.join(', ')})\\n === no changes ===`);\n  } else {\n    log('stage-1', `<< (${remainExports.join(', ')})\\n${preparedCode}`);\n  }\n\n  const result = {\n    metadata,\n    code: preparedCode,\n  };\n  results.add(result);\n\n  remainExports.forEach((token) => {\n    fileCache.set(token, result);\n  });\n\n  if (preparedCode === '') return undefined;\n\n  return {\n    imports,\n    name,\n    results: Array.from(results),\n  };\n}\n\nexport function prepareForEvalSync(\n  resolveCache: Map<string, string>,\n  codeCache: CodeCache,\n  resolve: (what: string, importer: string, stack: string[]) => string,\n  resolvedFile: FileInQueue,\n  options: Pick<Options, 'root' | 'pluginOptions' | 'inputSourceMap'>,\n  stack: string[] = []\n): ITransformFileResult[] | undefined {\n  const processed = processQueueItem(resolvedFile, codeCache, options);\n  if (!processed) return undefined;\n\n  const { imports, name, results } = processed;\n\n  const log = createCustomDebug('transform', getFileIdx(name));\n\n  const queue: FileInQueue[] = [];\n\n  imports?.forEach((importsOnly, importedFile) => {\n    try {\n      const resolved = resolve(importedFile, name, stack);\n      log('stage-1:sync-resolve', `✅ ${importedFile} -> ${resolved}`);\n      resolveCache.set(\n        `${name} -> ${importedFile}`,\n        `${resolved}\\0${importsOnly.join(',')}`\n      );\n      const fileContent = readFileSync(resolved, 'utf8');\n      queue.push({\n        name: resolved,\n        only: importsOnly,\n        code: fileContent,\n      });\n    } catch (err) {\n      log('stage-1:sync-resolve', `❌ cannot resolve ${importedFile}: %O`, err);\n    }\n  });\n\n  queue.forEach((item) => {\n    prepareForEvalSync(resolveCache, codeCache, resolve, item, options, [\n      name,\n      ...stack,\n    ]);\n  });\n\n  return Array.from(results);\n}\n\n/**\n * Parses the specified file and recursively all its dependencies,\n * finds tags, applies eval-time replacements, removes dead code.\n */\nexport default async function prepareForEval(\n  resolveCache: Map<string, string>,\n  codeCache: CodeCache,\n  resolve: (what: string, importer: string, stack: string[]) => Promise<string>,\n  file: Promise<FileInQueue>,\n  options: Pick<Options, 'root' | 'pluginOptions' | 'inputSourceMap'>,\n  stack: string[] = []\n): Promise<ITransformFileResult[] | undefined> {\n  const resolvedFile = await file;\n  const processed = processQueueItem(resolvedFile, codeCache, options);\n  if (!processed) return undefined;\n\n  const { imports, name, results } = processed;\n\n  const log = createCustomDebug('transform', getFileIdx(name));\n\n  const promises: Promise<ITransformFileResult[] | undefined>[] = [];\n\n  imports?.forEach((importsOnly, importedFile) => {\n    const promise = resolve(importedFile, name, stack).then(\n      (resolved) => {\n        log('stage-1:async-resolve', `✅ ${importedFile} -> ${resolved}`);\n        const resolveCacheKey = `${name} -> ${importedFile}`;\n        const cached = resolveCache.get(resolveCacheKey);\n        const importsOnlySet = new Set(importsOnly);\n        if (cached) {\n          const [, cachedOnly] = cached.split('\\0');\n          cachedOnly?.split(',').forEach((token) => {\n            importsOnlySet.add(token);\n          });\n        }\n\n        resolveCache.set(\n          resolveCacheKey,\n          `${resolved}\\0${[...importsOnlySet].join(',')}`\n        );\n        const fileContent = readFileSync(resolved, 'utf8');\n        return {\n          name: resolved,\n          only: importsOnly,\n          code: fileContent,\n        };\n      },\n      (err: unknown) => {\n        log(\n          'stage-1:async-resolve',\n          `❌ cannot resolve ${importedFile}: %O`,\n          err\n        );\n        return null;\n      }\n    );\n\n    promises.push(\n      prepareForEval(resolveCache, codeCache, resolve, promise, options, [\n        name,\n        ...stack,\n      ])\n    );\n  });\n\n  await Promise.all(promises);\n\n  return Array.from(results);\n}\n"],"mappings":"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"}