{"version":3,"file":"index.js","names":["debug","transform","loadLinariaOptions","slugify","default","collectTemplateDependencies","withLinariaMetadata","Module","transformUrl","isNode","getTagProcessor","getVisitorKeys","peek","processTemplateExpression","isEnabled","caller","name","evaluate","linaria","babel","options","JSON","stringify","plugins"],"sources":["../src/index.ts"],"sourcesContent":["/**\n * File defines babel prest for Linaria.\n * It uses ./extract function that is an entry point for styles extraction.\n * It also bypass babel options defined in Linaria config file with it's defaults (see ./utils/loadOptions).\n */\nimport type { ConfigAPI, TransformCaller } from '@babel/core';\n\nimport { debug } from '@linaria/logger';\n\nimport transform from './plugins/babel-transform';\nimport type { PluginOptions } from './transform-stages/helpers/loadLinariaOptions';\nimport loadLinariaOptions from './transform-stages/helpers/loadLinariaOptions';\n\nexport { slugify } from '@linaria/utils';\n\nexport * from './utils/collectTemplateDependencies';\nexport { default as collectTemplateDependencies } from './utils/collectTemplateDependencies';\nexport { default as withLinariaMetadata } from './utils/withLinariaMetadata';\nexport { default as Module } from './module';\nexport { default as transform } from './transform';\nexport * from './types';\nexport { default as loadLinariaOptions } from './transform-stages/helpers/loadLinariaOptions';\nexport type { PluginOptions } from './transform-stages/helpers/loadLinariaOptions';\nexport { transformUrl } from './transform-stages/4-extract';\nexport { default as isNode } from './utils/isNode';\nexport { default as getTagProcessor } from './utils/getTagProcessor';\nexport { default as getVisitorKeys } from './utils/getVisitorKeys';\nexport type { VisitorKeys } from './utils/getVisitorKeys';\nexport { default as peek } from './utils/peek';\nexport { default as processTemplateExpression } from './utils/processTemplateExpression';\n\nfunction isEnabled(caller?: TransformCaller & { evaluate?: true }) {\n  return caller?.name !== 'linaria' || caller.evaluate === true;\n}\n\nexport default function linaria(babel: ConfigAPI, options: PluginOptions) {\n  if (!babel.caller(isEnabled)) {\n    return {};\n  }\n  debug('options', JSON.stringify(options));\n  return {\n    plugins: [[transform, loadLinariaOptions(options)]],\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAGA,SAASA,KAAT,QAAsB,iBAAtB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AAEA,OAAOC,kBAAP,MAA+B,+CAA/B;AAEA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,cAAc,qCAAd;AACA,SAASC,OAAO,IAAIC,2BAApB,QAAuD,qCAAvD;AACA,SAASD,OAAO,IAAIE,mBAApB,QAA+C,6BAA/C;AACA,SAASF,OAAO,IAAIG,MAApB,QAAkC,UAAlC;AACA,SAASH,OAAO,IAAIH,SAApB,QAAqC,aAArC;AACA,cAAc,SAAd;AACA,SAASG,OAAO,IAAIF,kBAApB,QAA8C,+CAA9C;AAEA,SAASM,YAAT,QAA6B,8BAA7B;AACA,SAASJ,OAAO,IAAIK,MAApB,QAAkC,gBAAlC;AACA,SAASL,OAAO,IAAIM,eAApB,QAA2C,yBAA3C;AACA,SAASN,OAAO,IAAIO,cAApB,QAA0C,wBAA1C;AAEA,SAASP,OAAO,IAAIQ,IAApB,QAAgC,cAAhC;AACA,SAASR,OAAO,IAAIS,yBAApB,QAAqD,mCAArD;;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAAmE;EACjE,OAAOA,MAAM,EAAEC,IAAR,KAAiB,SAAjB,IAA8BD,MAAM,CAACE,QAAP,KAAoB,IAAzD;AACD;;AAED,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAmCC,OAAnC,EAA2D;EACxE,IAAI,CAACD,KAAK,CAACJ,MAAN,CAAaD,SAAb,CAAL,EAA8B;IAC5B,OAAO,EAAP;EACD;;EACDd,KAAK,CAAC,SAAD,EAAYqB,IAAI,CAACC,SAAL,CAAeF,OAAf,CAAZ,CAAL;EACA,OAAO;IACLG,OAAO,EAAE,CAAC,CAACtB,SAAD,EAAYC,kBAAkB,CAACkB,OAAD,CAA9B,CAAD;EADJ,CAAP;AAGD"}