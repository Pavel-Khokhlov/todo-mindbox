{"version":3,"file":"index.js","names":["Module","loadLinariaOptions","evaluate","resolveCache","codeCache","evalCache","code","options","filename","pluginOptions","m","dependencies","value","exports","processors","tagProcessors"],"sources":["../../src/evaluators/index.ts"],"sourcesContent":["/**\n * This file is an entry point for module evaluation for getting lazy dependencies.\n */\n\nimport Module from '../module';\nimport loadLinariaOptions from '../transform-stages/helpers/loadLinariaOptions';\nimport type { Options, CodeCache } from '../types';\n\nexport default function evaluate(\n  resolveCache: Map<string, string>,\n  codeCache: CodeCache,\n  evalCache: Map<string, Module>,\n  code: string[],\n  options: Pick<Options, 'filename' | 'pluginOptions'>\n) {\n  const filename = options?.filename ?? 'unknown';\n  const pluginOptions = loadLinariaOptions(options.pluginOptions);\n\n  const m = new Module(\n    filename ?? 'unknown',\n    pluginOptions,\n    resolveCache,\n    codeCache,\n    evalCache\n  );\n\n  m.dependencies = [];\n  m.evaluate(code);\n\n  return {\n    value: m.exports,\n    dependencies: m.dependencies,\n    processors: m.tagProcessors,\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,kBAAP,MAA+B,gDAA/B;AAGA,eAAe,SAASC,QAAT,CACbC,YADa,EAEbC,SAFa,EAGbC,SAHa,EAIbC,IAJa,EAKbC,OALa,EAMb;EACA,MAAMC,QAAQ,GAAGD,OAAO,EAAEC,QAAT,IAAqB,SAAtC;EACA,MAAMC,aAAa,GAAGR,kBAAkB,CAACM,OAAO,CAACE,aAAT,CAAxC;EAEA,MAAMC,CAAC,GAAG,IAAIV,MAAJ,CACRQ,QAAQ,IAAI,SADJ,EAERC,aAFQ,EAGRN,YAHQ,EAIRC,SAJQ,EAKRC,SALQ,CAAV;EAQAK,CAAC,CAACC,YAAF,GAAiB,EAAjB;EACAD,CAAC,CAACR,QAAF,CAAWI,IAAX;EAEA,OAAO;IACLM,KAAK,EAAEF,CAAC,CAACG,OADJ;IAELF,YAAY,EAAED,CAAC,CAACC,YAFX;IAGLG,UAAU,EAAEJ,CAAC,CAACK;EAHT,CAAP;AAKD"}