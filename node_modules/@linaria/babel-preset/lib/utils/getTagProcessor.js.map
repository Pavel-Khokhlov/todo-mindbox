{"version":3,"file":"getTagProcessor.js","names":["last","arr","length","zip","arr1","arr2","result","i","push","buildCodeFrameError","path","message","Error","findPackageJSON","pkgName","filename","pkgPath","require","resolve","paths","dirname","findUp","sync","cwd","er","code","undefined","definedTagsCache","Map","getDefinedTagsFromPackage","has","get","packageJSONPath","packageDir","packageJSON","JSON","parse","readFileSync","definedTags","linaria","tags","normalizedTags","Object","entries","reduce","acc","key","value","startsWith","join","set","isValidProcessorClass","module","BaseProcessor","constructor","getProcessorFromPackage","packageName","tagName","processorPath","Processor","default","getProcessorFromFile","getProcessorForIdentifier","imports","options","pathBinding","scope","getBinding","node","name","tagResolver","relatedImports","map","local","isIdentifier","isDescendant","binding","filter","isNotNull","isExpression","tagPath","imp","p","source","imported","processor","find","proc","getBuilderForIdentifier","params","prev","current","parentPath","isSequenceExpression","expressions","isCallExpression","callee","args","cookedArgs","arg","buildError","bind","type","getSource","extracted","extractExpression","evaluate","isMemberExpression","object","property","computed","isStringLiteral","isTaggedTemplateExpression","tag","quasis","expressionValues","collectTemplateDependencies","replacer","replacement","isPure","mutate","replaceWith","addComment","astService","t","addNamedImport","importedSource","addNamed","loc","getDisplayName","idx","fileContext","displayName","parent","findParent","isObjectProperty","isJSXOpeningElement","isVariableDeclarator","toString","keyPath","isJSXIdentifier","id","basename","test","replace","isTagReferenced","isReferenced","referencePaths","counters","WeakMap","getNextIndex","state","counter","cache","getTagProcessor","root","getProgramParent","collectExportsAndImports","builder","explicitImport","e"],"sources":["../../src/utils/getTagProcessor.ts"],"sourcesContent":["import { readFileSync } from 'fs';\nimport { basename, dirname, join } from 'path';\n\nimport { types as t } from '@babel/core';\nimport { addNamed } from '@babel/helper-module-imports';\nimport type { NodePath } from '@babel/traverse';\nimport type {\n  Expression,\n  SourceLocation,\n  Identifier,\n  MemberExpression,\n} from '@babel/types';\nimport findUp from 'find-up';\n\nimport { BaseProcessor } from '@linaria/tags';\nimport type { Param, Params, IFileContext } from '@linaria/tags';\nimport type { IImport, StrictOptions } from '@linaria/utils';\nimport {\n  collectExportsAndImports,\n  explicitImport,\n  isNotNull,\n  mutate,\n} from '@linaria/utils';\n\nimport collectTemplateDependencies, {\n  extractExpression,\n} from './collectTemplateDependencies';\nimport getSource from './getSource';\n\ntype BuilderArgs = ConstructorParameters<typeof BaseProcessor> extends [\n  Params,\n  typeof t,\n  SourceLocation | null,\n  (replacement: Expression, isPure: boolean) => void,\n  ...infer T\n]\n  ? T\n  : never;\n\ntype Builder = (...args: BuilderArgs) => BaseProcessor;\n\ntype ProcessorClass = new (\n  ...args: ConstructorParameters<typeof BaseProcessor>\n) => BaseProcessor;\n\nconst last = <T>(arr: T[]): T | undefined => arr[arr.length - 1];\n\nfunction zip<T1, T2>(arr1: T1[], arr2: T2[]) {\n  const result: (T1 | T2)[] = [];\n  for (let i = 0; i < arr1.length; i++) {\n    result.push(arr1[i]);\n    if (arr2[i]) result.push(arr2[i]);\n  }\n\n  return result;\n}\n\nfunction buildCodeFrameError(path: NodePath, message: string): Error {\n  try {\n    return path.buildCodeFrameError(message);\n  } catch {\n    return new Error(message);\n  }\n}\n\nfunction findPackageJSON(pkgName: string, filename: string | null | undefined) {\n  try {\n    const pkgPath = require.resolve(\n      pkgName,\n      filename ? { paths: [dirname(filename)] } : {}\n    );\n    return findUp.sync('package.json', { cwd: pkgPath });\n  } catch (er: unknown) {\n    if (\n      typeof er === 'object' &&\n      er !== null &&\n      (er as { code?: unknown }).code === 'MODULE_NOT_FOUND'\n    ) {\n      return undefined;\n    }\n\n    throw er;\n  }\n}\n\nconst definedTagsCache = new Map<string, Record<string, string> | undefined>();\nconst getDefinedTagsFromPackage = (\n  pkgName: string,\n  filename: string | null | undefined\n): Record<string, string> | undefined => {\n  if (definedTagsCache.has(pkgName)) {\n    return definedTagsCache.get(pkgName);\n  }\n\n  const packageJSONPath = findPackageJSON(pkgName, filename);\n  if (!packageJSONPath) {\n    return undefined;\n  }\n\n  const packageDir = dirname(packageJSONPath);\n  const packageJSON = JSON.parse(readFileSync(packageJSONPath, 'utf8'));\n  const definedTags: Record<string, string> | undefined =\n    packageJSON.linaria?.tags;\n\n  const normalizedTags = definedTags\n    ? Object.entries(definedTags).reduce(\n        (acc, [key, value]) => ({\n          ...acc,\n          [key]: value.startsWith('.')\n            ? join(packageDir, value)\n            : require.resolve(value, { paths: [packageDir] }),\n        }),\n        {} as Record<string, string>\n      )\n    : undefined;\n\n  definedTagsCache.set(pkgName, normalizedTags);\n\n  return normalizedTags;\n};\n\nfunction isValidProcessorClass(module: unknown): module is ProcessorClass {\n  return module instanceof BaseProcessor.constructor;\n}\n\nfunction getProcessorFromPackage(\n  packageName: string,\n  tagName: string,\n  filename: string | null | undefined\n): ProcessorClass | null {\n  const definedTags = getDefinedTagsFromPackage(packageName, filename);\n  const processorPath = definedTags?.[tagName];\n  if (!processorPath) {\n    return null;\n  }\n\n  const Processor = require(processorPath).default;\n  if (!isValidProcessorClass(Processor)) {\n    return null;\n  }\n\n  return Processor;\n}\n\nfunction getProcessorFromFile(processorPath: string): ProcessorClass | null {\n  const Processor = require(processorPath).default;\n  if (!isValidProcessorClass(Processor)) {\n    return null;\n  }\n\n  return Processor;\n}\n\nfunction getProcessorForIdentifier(\n  path: NodePath<Identifier>,\n  imports: IImport[],\n  filename: string | null | undefined,\n  options: Pick<\n    StrictOptions,\n    'classNameSlug' | 'displayName' | 'evaluate' | 'tagResolver'\n  >\n): [ProcessorClass, NodePath<Identifier | MemberExpression>] | [null, null] {\n  const pathBinding = path.scope.getBinding(path.node.name);\n  if (!pathBinding) {\n    // It's not a binding, so it's not a tag\n    return [null, null];\n  }\n\n  const tagResolver = options.tagResolver ?? (() => null);\n\n  // FIXME: can be simplified\n  const relatedImports = imports\n    .map(\n      (i): [IImport, NodePath<Identifier | MemberExpression> | null] | null => {\n        const { local } = i;\n\n        if (local === path) {\n          return [i, null];\n        }\n\n        if (!local.isIdentifier()) {\n          if (path.isDescendant(local)) {\n            return [i, local];\n          }\n\n          return null;\n        }\n\n        const binding = local.scope.getBinding(local.node.name);\n        if (pathBinding === binding) {\n          return [i, path];\n        }\n\n        return null;\n      }\n    )\n    .filter(isNotNull)\n    .filter((i) => i[1] === null || i[1].isExpression());\n\n  if (relatedImports.length === 0) {\n    return [null, null];\n  }\n\n  const [Processor = null, tagPath = null] =\n    relatedImports\n      .map(\n        ([imp, p]): [\n          ProcessorClass | null,\n          NodePath<Identifier | MemberExpression> | null\n        ] => {\n          const source = tagResolver(imp.source, imp.imported);\n          const processor = source\n            ? getProcessorFromFile(source)\n            : getProcessorFromPackage(imp.source, imp.imported, filename);\n          return [processor, p];\n        }\n      )\n      .find(([proc]) => proc) ?? [];\n\n  return Processor === null || tagPath === null\n    ? [null, null]\n    : [Processor, tagPath];\n}\n\nfunction getBuilderForIdentifier(\n  path: NodePath<Identifier>,\n  imports: IImport[],\n  filename: string | null | undefined,\n  options: Pick<\n    StrictOptions,\n    'classNameSlug' | 'displayName' | 'evaluate' | 'tagResolver'\n  >\n): Builder | null {\n  const [Processor, tagPath] = getProcessorForIdentifier(\n    path,\n    imports,\n    filename,\n    options\n  );\n\n  if (!Processor || !tagPath) {\n    return null;\n  }\n\n  const params: Param[] = [['tag', tagPath.node]];\n  let prev: NodePath = tagPath;\n  let current: NodePath | null = tagPath.parentPath;\n  while (current && current !== path) {\n    if (\n      current?.isSequenceExpression() &&\n      last(current.node.expressions) === prev.node\n    ) {\n      prev = current;\n      current = current.parentPath;\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (current?.isCallExpression({ callee: prev.node })) {\n      const args = current.get('arguments');\n      const cookedArgs = args\n        .map((arg) => {\n          const buildError = arg.buildCodeFrameError.bind(arg);\n          if (!arg.isExpression()) {\n            throw buildError(`Unexpected type of an argument ${arg.type}`);\n          }\n          const source = getSource(arg);\n          const extracted = extractExpression(arg, options.evaluate);\n          return { ...extracted, source, buildCodeFrameError: buildError };\n        })\n        .filter(isNotNull);\n\n      params.push(['call', ...cookedArgs]);\n      prev = current;\n      current = current.parentPath;\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (current?.isMemberExpression({ object: prev.node })) {\n      const property = current.get('property');\n      if (property.isIdentifier() && !current.node.computed) {\n        params.push(['member', property.node.name]);\n      } else if (property.isStringLiteral()) {\n        params.push(['member', property.node.value]);\n      } else {\n        throw property.buildCodeFrameError(`Unexpected type of a property`);\n      }\n\n      prev = current;\n      current = current.parentPath;\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (current?.isTaggedTemplateExpression({ tag: prev.node })) {\n      const [quasis, expressionValues] = collectTemplateDependencies(\n        current,\n        options.evaluate\n      );\n      params.push(['template', zip(quasis, expressionValues)]);\n\n      prev = current;\n      current = current.parentPath;\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    break;\n  }\n\n  const replacer = (replacement: Expression, isPure: boolean) => {\n    mutate(prev, (p) => {\n      p.replaceWith(replacement);\n      if (isPure) {\n        p.addComment('leading', '#__PURE__');\n      }\n    });\n  };\n\n  const astService = {\n    ...t,\n    addNamedImport: (name: string, importedSource: string) =>\n      addNamed(path, name, importedSource),\n  };\n\n  return (...args: BuilderArgs) =>\n    new Processor(\n      params,\n      astService,\n      tagPath.node.loc ?? null,\n      replacer,\n      ...args\n    );\n}\n\nfunction getDisplayName(\n  path: NodePath<Identifier>,\n  idx: number,\n  fileContext: IFileContext\n): string {\n  let displayName: string | undefined;\n\n  const parent = path.findParent(\n    (p) =>\n      p.isObjectProperty() ||\n      p.isJSXOpeningElement() ||\n      p.isVariableDeclarator()\n  );\n\n  if (parent) {\n    if (parent.isObjectProperty()) {\n      if ('name' in parent.node.key) {\n        displayName = parent.node.key.name;\n      } else if ('value' in parent.node.key) {\n        displayName = parent.node.key.value.toString();\n      } else {\n        const keyPath = parent.get('key');\n        displayName = getSource(keyPath);\n      }\n    } else if (parent.isJSXOpeningElement()) {\n      const name = parent.get('name');\n      if (name.isJSXIdentifier()) {\n        displayName = name.node.name;\n      }\n    } else if (parent.isVariableDeclarator()) {\n      const id = parent.get('id');\n      if (id.isIdentifier()) {\n        displayName = id.node.name;\n      }\n    }\n  }\n\n  if (!displayName) {\n    const filename = fileContext.filename ?? 'unknown';\n    // Try to derive the path from the filename\n    displayName = basename(filename);\n\n    if (/^index\\.[a-z\\d]+$/.test(displayName)) {\n      // If the file name is 'index', better to get name from parent folder\n      displayName = basename(dirname(filename));\n    }\n\n    // Remove the file extension\n    displayName = displayName.replace(/\\.[a-z\\d]+$/, '');\n\n    if (displayName) {\n      displayName += idx;\n    } else {\n      throw new Error(\n        \"Couldn't determine a name for the component. Ensure that it's either:\\n\" +\n          '- Assigned to a variable\\n' +\n          '- Is an object property\\n' +\n          '- Is a prop in a JSX element\\n'\n      );\n    }\n  }\n\n  return displayName;\n}\n\nfunction isTagReferenced(path: NodePath): boolean {\n  // Check if the variable is referenced anywhere for basic DCE\n  // Only works when it's assigned to a variable\n  let isReferenced = true;\n\n  const parent = path.findParent(\n    (p) =>\n      p.isObjectProperty() ||\n      p.isJSXOpeningElement() ||\n      p.isVariableDeclarator()\n  );\n\n  if (parent) {\n    if (parent.isVariableDeclarator()) {\n      const id = parent.get('id');\n      // FIXME: replace with id.isReferencedIdentifier()\n      if (id.isIdentifier()) {\n        const { referencePaths } = path.scope.getBinding(id.node.name) || {\n          referencePaths: [],\n        };\n\n        isReferenced = referencePaths.length !== 0;\n      }\n    }\n  }\n\n  return isReferenced;\n}\n\nconst counters = new WeakMap<IFileContext, number>();\nconst getNextIndex = (state: IFileContext) => {\n  const counter = counters.get(state) ?? 0;\n  counters.set(state, counter + 1);\n  return counter;\n};\n\nconst cache = new WeakMap<Identifier, BaseProcessor | null>();\n\nexport default function getTagProcessor(\n  path: NodePath<Identifier>,\n  fileContext: IFileContext,\n  options: Pick<\n    StrictOptions,\n    'classNameSlug' | 'displayName' | 'evaluate' | 'tagResolver'\n  >\n): BaseProcessor | null {\n  if (!cache.has(path.node)) {\n    const root = path.scope.getProgramParent().path;\n    const { imports } = collectExportsAndImports(root, fileContext.filename);\n    try {\n      const builder = getBuilderForIdentifier(\n        path,\n        imports.filter(explicitImport),\n        fileContext.filename,\n        options\n      );\n      if (builder) {\n        // Increment the index of the style we're processing\n        // This is used for slug generation to prevent collision\n        // Also used for display name if it couldn't be determined\n        const idx = getNextIndex(fileContext);\n\n        const displayName = getDisplayName(path, idx, fileContext);\n\n        const processor = builder(\n          displayName,\n          isTagReferenced(path),\n          idx,\n          options,\n          fileContext\n        );\n\n        cache.set(path.node, processor);\n      } else {\n        cache.set(path.node, null);\n      }\n    } catch (e) {\n      if (e instanceof Error) {\n        throw buildCodeFrameError(path, e.message);\n      }\n\n      throw e;\n    }\n  }\n\n  return cache.get(path.node) ?? null;\n}\n"],"mappings":"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"}