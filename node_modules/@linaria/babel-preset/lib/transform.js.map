{"version":3,"file":"transform.js","names":["syncStages","originalCode","options","prepareStageResults","babelConfig","resolveCache","Map","codeCache","evalCache","eventEmitter","filename","every","r","withLinariaMetadata","metadata","code","sourceMap","inputSourceMap","type","evalStageResult","evalStage","map","valueCache","dependencies","collectStageResult","prepareForRuntime","extractStageResult","extractStage","linaria","processors","replacements","transformSync","syncResolve","entryPoint","name","only","prepareForEvalSync","transform","asyncResolve","Promise","resolve","prepareForEval"],"sources":["../src/transform.ts"],"sourcesContent":["/**\n * This file exposes transform function that:\n * - parse the passed code to AST\n * - transforms the AST using Linaria babel preset ('./babel/index.js) and additional config defined in Linaria config file or passed to bundler configuration.\n * - runs generated CSS files through default of user-defined preprocessor\n * - generates source maps for CSS files\n * - return transformed code (without Linaria template literals), generated CSS, source maps and babel metadata from transform step.\n */\n\nimport type { TransformOptions } from '@babel/core';\n\nimport type Module from './module';\nimport prepareForEval, {\n  prepareForEvalSync,\n} from './transform-stages/1-prepare-for-eval';\nimport evalStage from './transform-stages/2-eval';\nimport prepareForRuntime from './transform-stages/3-prepare-for-runtime';\nimport extractStage from './transform-stages/4-extract';\nimport type { Options, Result, CodeCache, ITransformFileResult } from './types';\nimport withLinariaMetadata from './utils/withLinariaMetadata';\n\nfunction syncStages(\n  originalCode: string,\n  options: Options,\n  prepareStageResults: ITransformFileResult[] | undefined,\n  babelConfig: TransformOptions = {},\n  resolveCache = new Map<string, string>(),\n  codeCache: CodeCache = new Map(),\n  evalCache = new Map<string, Module>(),\n  eventEmitter?: (ev: unknown) => void\n) {\n  const { filename } = options;\n\n  // File does not contain any tags. Return original code.\n  if (\n    !prepareStageResults ||\n    prepareStageResults.every((r) => !withLinariaMetadata(r.metadata))\n  ) {\n    return {\n      code: originalCode,\n      sourceMap: options.inputSourceMap,\n    };\n  }\n\n  // *** 2nd stage ***\n\n  eventEmitter?.({ type: 'transform:stage-2:start', filename });\n\n  const evalStageResult = evalStage(\n    resolveCache,\n    codeCache,\n    evalCache,\n    prepareStageResults.map((r) => r.code),\n    options\n  );\n\n  eventEmitter?.({ type: 'transform:stage-2:finish', filename });\n\n  if (evalStageResult === null) {\n    return {\n      code: originalCode,\n      sourceMap: options.inputSourceMap,\n    };\n  }\n\n  const [valueCache, dependencies] = evalStageResult;\n\n  // *** 3rd stage ***\n\n  eventEmitter?.({ type: 'transform:stage-3:start', filename });\n\n  const collectStageResult = prepareForRuntime(\n    originalCode,\n    valueCache,\n    options,\n    babelConfig\n  );\n\n  eventEmitter?.({ type: 'transform:stage-3:finish', filename });\n\n  if (!withLinariaMetadata(collectStageResult.metadata)) {\n    return {\n      code: collectStageResult.code!,\n      sourceMap: collectStageResult.map,\n    };\n  }\n\n  // *** 4th stage\n\n  eventEmitter?.({ type: 'transform:stage-4:start', filename });\n\n  const extractStageResult = extractStage(\n    collectStageResult.metadata.linaria.processors,\n    originalCode,\n    options\n  );\n\n  eventEmitter?.({ type: 'transform:stage-4:finish', filename });\n\n  return {\n    ...extractStageResult,\n    code: collectStageResult.code ?? '',\n    dependencies,\n    replacements: [\n      ...extractStageResult.replacements,\n      ...collectStageResult.metadata.linaria.replacements,\n    ],\n    sourceMap: collectStageResult.map,\n  };\n}\n\nexport function transformSync(\n  originalCode: string,\n  options: Options,\n  syncResolve: (what: string, importer: string, stack: string[]) => string,\n  babelConfig: TransformOptions = {},\n  resolveCache = new Map<string, string>(),\n  codeCache: CodeCache = new Map(),\n  evalCache = new Map<string, Module>(),\n  eventEmitter?: (ev: unknown) => void\n): Result {\n  const { filename } = options;\n\n  // *** 1st stage ***\n\n  eventEmitter?.({ type: 'transform:stage-1:start', filename });\n\n  const entryPoint = {\n    name: options.filename,\n    code: originalCode,\n    only: ['__linariaPreval'],\n  };\n\n  const prepareStageResults = prepareForEvalSync(\n    resolveCache,\n    codeCache,\n    syncResolve,\n    entryPoint,\n    options\n  );\n\n  eventEmitter?.({ type: 'transform:stage-1:finish', filename });\n\n  // *** The rest of the stages are synchronous ***\n\n  return syncStages(\n    originalCode,\n    options,\n    prepareStageResults,\n    babelConfig,\n    resolveCache,\n    codeCache,\n    evalCache,\n    eventEmitter\n  );\n}\n\nexport default async function transform(\n  originalCode: string,\n  options: Options,\n  asyncResolve: (\n    what: string,\n    importer: string,\n    stack: string[]\n  ) => Promise<string>,\n  babelConfig: TransformOptions = {},\n  resolveCache = new Map<string, string>(),\n  codeCache: CodeCache = new Map(),\n  evalCache = new Map<string, Module>(),\n  eventEmitter?: (ev: unknown) => void\n): Promise<Result> {\n  const { filename } = options;\n\n  // *** 1st stage ***\n\n  eventEmitter?.({ type: 'transform:stage-1:start', filename });\n\n  const entryPoint = Promise.resolve({\n    name: options.filename,\n    code: originalCode,\n    only: ['__linariaPreval'],\n  });\n\n  const prepareStageResults = await prepareForEval(\n    resolveCache,\n    codeCache,\n    asyncResolve,\n    entryPoint,\n    options\n  );\n\n  eventEmitter?.({ type: 'transform:stage-1:finish', filename });\n\n  // *** The rest of the stages are synchronous ***\n\n  return syncStages(\n    originalCode,\n    options,\n    prepareStageResults,\n    babelConfig,\n    resolveCache,\n    codeCache,\n    evalCache,\n    eventEmitter\n  );\n}\n"],"mappings":"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"}