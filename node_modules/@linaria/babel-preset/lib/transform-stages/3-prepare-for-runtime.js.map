{"version":3,"file":"3-prepare-for-runtime.js","names":["prepareForRuntime","code","valueCache","options","babelConfig","pluginOptions","loadLinariaOptions","babelOptions","loadBabelOptions","filename","file","cachedParseSync","transformPlugins","require","resolve","values","transformConfig","buildOptions","envName","plugins","sourceMaps","sourceFileName","inputSourceMap","root","ast","babelrc","configFile","result","babel","transformFromAstSync","cwd","program","Error"],"sources":["../../src/transform-stages/3-prepare-for-runtime.ts"],"sourcesContent":["import * as babel from '@babel/core';\n\nimport { buildOptions, loadBabelOptions } from '@linaria/utils';\n\nimport type { Options, ValueCache } from '../types';\n\nimport cachedParseSync from './helpers/cachedParseSync';\nimport loadLinariaOptions from './helpers/loadLinariaOptions';\n\n/**\n * Parses the specified file, finds tags, applies run-time replacements,\n * removes dead code.\n */\nexport default function prepareForRuntime(\n  code: string,\n  valueCache: ValueCache,\n  options: Options,\n  babelConfig: babel.TransformOptions\n) {\n  const pluginOptions = loadLinariaOptions(options.pluginOptions);\n  const babelOptions = loadBabelOptions(\n    options.filename,\n    pluginOptions?.babelOptions\n  );\n\n  const file = cachedParseSync(code, babelOptions);\n\n  const transformPlugins: babel.PluginItem[] = [\n    [\n      require.resolve('../plugins/collector'),\n      {\n        ...pluginOptions,\n        values: valueCache,\n      },\n    ],\n  ];\n\n  const transformConfig = buildOptions({\n    envName: 'linaria',\n    plugins: transformPlugins,\n    sourceMaps: true,\n    sourceFileName: babelConfig.filename ?? options.filename,\n    inputSourceMap: options.inputSourceMap,\n    root: options.root,\n    ast: true,\n    babelrc: false,\n    configFile: false,\n  });\n\n  const result = babel.transformFromAstSync(file, code, {\n    ...transformConfig,\n    cwd: babelConfig.cwd,\n    filename: babelConfig.filename ?? options.filename,\n  });\n\n  if (!result || !result.ast?.program) {\n    throw new Error('Babel transform failed');\n  }\n\n  return result;\n}\n"],"mappings":";;;;;;;AAAA;;AAEA;;AAIA;;AACA;;;;;;;;AAEA;AACA;AACA;AACA;AACe,SAASA,iBAAT,CACbC,IADa,EAEbC,UAFa,EAGbC,OAHa,EAIbC,WAJa,EAKb;EAAA;;EACA,MAAMC,aAAa,GAAG,IAAAC,2BAAA,EAAmBH,OAAO,CAACE,aAA3B,CAAtB;EACA,MAAME,YAAY,GAAG,IAAAC,uBAAA,EACnBL,OAAO,CAACM,QADW,EAEnBJ,aAFmB,aAEnBA,aAFmB,uBAEnBA,aAAa,CAAEE,YAFI,CAArB;EAKA,MAAMG,IAAI,GAAG,IAAAC,wBAAA,EAAgBV,IAAhB,EAAsBM,YAAtB,CAAb;EAEA,MAAMK,gBAAoC,GAAG,CAC3C,CACEC,OAAO,CAACC,OAAR,CAAgB,sBAAhB,CADF,EAEE,EACE,GAAGT,aADL;IAEEU,MAAM,EAAEb;EAFV,CAFF,CAD2C,CAA7C;EAUA,MAAMc,eAAe,GAAG,IAAAC,mBAAA,EAAa;IACnCC,OAAO,EAAE,SAD0B;IAEnCC,OAAO,EAAEP,gBAF0B;IAGnCQ,UAAU,EAAE,IAHuB;IAInCC,cAAc,2BAAEjB,WAAW,CAACK,QAAd,yEAA0BN,OAAO,CAACM,QAJb;IAKnCa,cAAc,EAAEnB,OAAO,CAACmB,cALW;IAMnCC,IAAI,EAAEpB,OAAO,CAACoB,IANqB;IAOnCC,GAAG,EAAE,IAP8B;IAQnCC,OAAO,EAAE,KAR0B;IASnCC,UAAU,EAAE;EATuB,CAAb,CAAxB;EAYA,MAAMC,MAAM,GAAGC,KAAK,CAACC,oBAAN,CAA2BnB,IAA3B,EAAiCT,IAAjC,EAAuC,EACpD,GAAGe,eADiD;IAEpDc,GAAG,EAAE1B,WAAW,CAAC0B,GAFmC;IAGpDrB,QAAQ,4BAAEL,WAAW,CAACK,QAAd,2EAA0BN,OAAO,CAACM;EAHU,CAAvC,CAAf;;EAMA,IAAI,CAACkB,MAAD,IAAW,iBAACA,MAAM,CAACH,GAAR,wCAAC,YAAYO,OAAb,CAAf,EAAqC;IACnC,MAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;EACD;;EAED,OAAOL,MAAP;AACD"}