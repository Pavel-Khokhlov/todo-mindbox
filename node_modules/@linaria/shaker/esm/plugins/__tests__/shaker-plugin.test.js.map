{"version":3,"file":"shaker-plugin.test.js","names":["join","transformSync","dedent","shakerPlugin","hasShakerMetadata","keep","only","code","filename","__dirname","formattedCode","transformed","babelrc","configFile","plugins","onlyExports","metadata","Error","__linariaShaker","describe","it","expect","toMatchSnapshot","imports","size","toBe"],"sources":["../../../src/plugins/__tests__/shaker-plugin.test.ts"],"sourcesContent":["import { join } from 'path';\n\nimport { transformSync } from '@babel/core';\nimport dedent from 'dedent';\n\nimport shakerPlugin, { hasShakerMetadata } from '../shaker-plugin';\n\nconst keep = (only: string[]) => (code: TemplateStringsArray) => {\n  const filename = join(__dirname, 'source.js');\n  const formattedCode = dedent(code);\n\n  const transformed = transformSync(formattedCode, {\n    babelrc: false,\n    configFile: false,\n    filename,\n    plugins: [\n      [\n        shakerPlugin,\n        {\n          onlyExports: only,\n        },\n      ],\n    ],\n  });\n\n  if (\n    !transformed ||\n    !transformed.code ||\n    !hasShakerMetadata(transformed.metadata)\n  ) {\n    throw new Error(`${filename} has no shaker metadata`);\n  }\n\n  return {\n    code: transformed.code,\n    metadata: transformed.metadata.__linariaShaker,\n  };\n};\n\ndescribe('shaker', () => {\n  it('should remove unused export', () => {\n    const { code, metadata } = keep(['a'])`\n      export const a = 1;\n      export const b = 2;\n    `;\n\n    expect(code).toMatchSnapshot();\n    expect(metadata.imports.size).toBe(0);\n  });\n\n  it('should remove related code', () => {\n    const { code, metadata } = keep(['a'])`\n      const a = 1;\n      const b = 2;\n      export { a, b };\n    `;\n\n    expect(code).toMatchSnapshot();\n    expect(metadata.imports.size).toBe(0);\n  });\n\n  it('should process array patterns', () => {\n    const { code, metadata } = keep(['c'])`\n      const [a, b, c] = array;\n      const [,,, d, e] = array;\n\n      export { a, b, c, d, e};\n    `;\n\n    expect(code).toMatchSnapshot();\n    expect(metadata.imports.size).toBe(0);\n  });\n\n  it('should process object patterns', () => {\n    const { code, metadata } = keep(['b1'])`\n      const { a: a1, b: b1, c: c1 } = obj;\n      const { d: d1, e: e1 } = obj;\n\n      export { a1, b1, c1, d1, e1 };\n    `;\n\n    expect(code).toMatchSnapshot();\n    expect(metadata.imports.size).toBe(0);\n  });\n\n  it('should process transpiled enums', () => {\n    const { code, metadata } = keep(['defaultValue'])`\n      exports.Kind = void 0;\n\n      var Kind;\n      (function (Kind) {\n        Kind[\"DEFAULT\"] = \"default\";\n        Kind[\"TRANSPARENT\"] = \"transparent\";\n        Kind[\"RED\"] = \"red\";\n        Kind[\"BLACK\"] = \"black\";\n      })(Kind = exports.Kind || (exports.Kind = {}));\n\n      export const defaultValue = Kind.DEFAULT;\n    `;\n\n    expect(code).toMatchSnapshot();\n    expect(metadata.imports.size).toBe(0);\n  });\n\n  it('should keep referenced exports', () => {\n    const { code, metadata } = keep(['defaultValue'])`\n      exports.foo = 10;\n\n      exports.defaultValue = Math.random() * exports.foo;\n    `;\n\n    expect(code).toMatchSnapshot();\n    expect(metadata.imports.size).toBe(0);\n  });\n\n  it('should throw out unused referenced exports', () => {\n    const { code, metadata } = keep(['defaultValue'])`\n      exports.foo = 10;\n\n      exports.bar = Math.random() * exports.foo;\n\n      exports.defaultValue = 20;\n    `;\n\n    expect(code).toMatchSnapshot();\n    expect(metadata.imports.size).toBe(0);\n  });\n\n  it('should remove all references of `a`', () => {\n    const { code, metadata } = keep(['b'])`\n      let a = 1;\n\n      a = 2;\n\n      exports.a = a;\n      exports.b = 10;\n    `;\n\n    expect(code).toMatchSnapshot();\n    expect(metadata.imports.size).toBe(0);\n  });\n\n  it('should respect implicit references', () => {\n    const { code, metadata } = keep(['a'])`\n      let _a;\n      exports.a = _a = {};\n      exports.b = _a;\n    `;\n\n    expect(code).toMatchSnapshot();\n    expect(metadata.imports.size).toBe(0);\n  });\n\n  it('should keep assigment even if export is marked for removing', () => {\n    const { code, metadata } = keep(['b'])`\n      let _a;\n      exports.a = _a = {};\n      exports.b = _a;\n    `;\n\n    expect(code).toMatchSnapshot();\n    expect(metadata.imports.size).toBe(0);\n  });\n});\n"],"mappings":"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"}